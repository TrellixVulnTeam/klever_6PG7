{
  "3.14": {
    "environment processes": {
      "parport_scenario": {
        "actions": {
          "callback": {
            "callback": "%callback%",
            "parameters": [
              "%parport%"
            ]
          },
          "callbacks": {
            "comment": "Manage particular interface on a device.",
            "process": "([save_state].[restore_state] | [enable_irq].[disable_irq] | [callback]).{callbacks} | (deregister)"
          },
          "deregister": {
            "condition": [
              "%parport% == $ARG1"
            ],
            "parameters": [
              "%parport%"
            ]
          },
          "disable_irq": {
            "callback": "%parport_operations.disable_irq%",
            "parameters": [
              "%parport%"
            ]
          },
          "enable_irq": {
            "callback": "%parport_operations.enable_irq%",
            "parameters": [
              "%parport%"
            ]
          },
          "init_state": {
            "callback": "%parport_operations.init_state%",
            "parameters": []
          },
          "register": {
            "parameters": [
              "%parport_operations%",
              "%parport%"
            ]
          },
          "restore_state": {
            "callback": "%parport_operations.restore_state%",
            "parameters": [
              "%parport%"
            ]
          },
          "save_state": {
            "callback": "%parport_operations.save_state%",
            "parameters": [
              "%parport%"
            ]
          }
        },
        "comment": "Invoke parallel port callbacks.",
        "labels": {
          "callback": {
            "callback": true
          },
          "parport": {
            "interface": [
              "parport.parport"
            ],
            "parameter": true,
            "resource": true
          },
          "parport_operations": {
            "container": true,
            "interface": [
              "parport.parport_operations"
            ],
            "parameter": true
          }
        },
        "process": "(!register).[init_state].{callbacks}",
        "reference": true
      }
    },
    "functions models": {
      "parport_register_port": {
        "actions": {
          "assign": {
            "comment": "Get callbacks.",
            "statements": [
              "%parport_operations% = $ARG4;",
              "$ALLOC(%parport%);"
            ]
          },
          "fail": {
            "comment": "Fail registration.",
            "statements": [
              "return 0;"
            ]
          },
          "register": {
            "parameters": [
              "%parport_operations%",
              "%parport%"
            ]
          },
          "success": {
            "comment": "Registration successfull.",
            "statements": [
              "return %parport%;"
            ]
          }
        },
        "comment": "Register a parallel port.",
        "labels": {
          "parport": {
            "interface": [
              "parport.parport"
            ],
            "parameter": true
          },
          "parport_operations": {
            "container": true,
            "interface": [
              "parport.parport_operations"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[register].<success> | <fail>",
        "reference": true
      },
      "parport_remove_port": {
        "actions": {
          "assign": {
            "comment": "Get port.",
            "statements": [
              "%parport% = $ARG1;"
            ]
          },
          "deregister": {
            "parameters": [
              "%parport%"
            ]
          }
        },
        "comment": "Deregister a parallel port.",
        "labels": {
          "parport": {
            "interface": [
              "parport.parport"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[deregister]",
        "reference": true
      }
    }
  }
}