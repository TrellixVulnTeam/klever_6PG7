{
  "2.6.33": {
    "categories": {
      "hid_driver": {
        "callbacks": {
          "probe": {
            "declaration": "int (*probe)(%hid_driver.hid_device%, %hid_driver.hid_id%)"
          },
          "remove": {
            "declaration": "void (*remove)(%hid_driver.hid_device%)"
          }
        },
        "containers": {
          "hid_driver": {
            "declaration": "struct hid_driver a",
            "fields": {
              "probe": "%hid_driver.probe%",
              "remove": "%hid_driver.remove%"
            },
            "header": "linux/hid.h"
          },
          "driver_ids": {
            "declaration": "const struct hid_device_id x[]",
            "header": "linux/hid.h"
          }
        },
        "resources": {
          "hid_device": {
            "declaration": "struct hid_device *dev"
          },
          "hid_id": {
            "declaration": "struct hid_device_id *id"
          }
        }
      }
    }
  },
  "3.14": {
    "categories": {
      "hid_driver": {
        "callbacks": {
          "probe": {
            "declaration": "int (*probe)(%hid_driver.hid_device%, %hid_driver.hid_id%)"
          },
          "remove": {
            "declaration": "void (*remove)(%hid_driver.hid_device%)"
          },
          "suspend": {
            "declaration": "int (*suspend)(%hid_driver.hid_device%, pm_message_t message)"
          },
          "resume": {
            "declaration": "int (*resume)(%hid_driver.hid_device%)"
          },
          "reset_resume": {
            "declaration": "int (*reset_resume)(%hid_driver.hid_device%)"
          },
          "ff_playback": {
            "declaration": "int (*play_effect)(%hid_driver.hid_input_device%, %hid_driver.input_data%, struct ff_effect *)"
          }
        },
        "containers": {
          "hid_driver": {
            "declaration": "struct hid_driver a",
            "fields": {
              "probe": "%hid_driver.probe%",
              "remove": "%hid_driver.remove%",
              "suspend": "%hid_driver.suspend%",
              "resume": "%hid_driver.resume%",
              "reset_resume": "%hid_driver.reset_resume%"
            },
            "header": "linux/hid.h"
          }
        },
        "resources": {
          "hid_device": {
            "declaration": "struct hid_device *dev"
          },
          "hid_input_device": {
            "declaration": "struct input_dev *dev",
            "headers": ["linux/input.h"]
          },
          "input_data": {
            "declaration": "void *data"
          },
          "hid_id": {
            "declaration": "struct hid_device_id *id"
          }
        },
        "reference": true
      }
    },
    "functions models": {
      "__hid_register_driver": {
        "declaration": "int __hid_register_driver(*%hid_driver.hid_driver%, struct module *, const char *mod_name)",
        "header": "linux/hid.h",
        "reference": true
      },
      "hid_unregister_driver": {
        "declaration": "void hid_unregister_driver(*%hid_driver.hid_driver%)",
        "header": "linux/hid.h",
        "reference": true
      },
      "input_ff_create_memless": {
        "declaration": "int input_ff_create_memless(%hid_driver.hid_input_device%, void *data, %hid_driver.ff_playback%)",
        "header": "linux/input.h",
        "reference": true
      }
    }
  }
}